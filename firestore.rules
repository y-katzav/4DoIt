rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /boards/{boardId} {
      allow get, list: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid ||
        (resource.data.members is map && resource.data.members[request.auth.uid] in ['viewer', 'editor', 'owner']) ||
        // אפשר קריאה אם יש membership ב-users/{uid}/boardMemberships/{boardId}
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/boardMemberships/$(boardId))
      );

      allow create: if isSignedIn()
        && request.resource.data.ownerId == request.auth.uid
        && (!('members' in request.resource.data)
            || request.resource.data.members is map);

      allow update, delete: if isSignedIn() && (
        resource.data.ownerId == request.auth.uid ||
        (resource.data.members is map && resource.data.members[request.auth.uid] == 'editor')
      );

      match /tasks/{taskId} {
        allow read: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] in ['viewer', 'editor', 'owner']
          )
        );
        allow create: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] == 'editor'
          )
        );
        allow update, delete: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] == 'editor'
          )
        );
      }

      match /categories/{categoryId} {
        allow read: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] in ['viewer', 'editor', 'owner']
          )
        );
        allow create: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] == 'editor'
          )
        );
        allow update, delete: if isSignedIn() && (
          get(/databases/$(database)/documents/boards/$(boardId)).data.ownerId == request.auth.uid ||
          (
            get(/databases/$(database)/documents/boards/$(boardId)).data.members is map &&
            get(/databases/$(database)/documents/boards/$(boardId)).data.members[request.auth.uid] == 'editor'
          )
        );
      }
    }

    match /boardInvitations/{invitationId} {
      allow create: if isSignedIn();
      allow read: if isSignedIn() && (
        resource.data.senderUid == request.auth.uid ||
        resource.data.recipientEmail == request.auth.token.email
      );
      allow update: if isSignedIn() && (
        resource.data.recipientEmail == request.auth.token.email
      );
      allow delete: if isSignedIn() && (
        resource.data.senderUid == request.auth.uid
      );
    }

    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && request.auth.uid == userId;
      allow delete: if isSignedIn() && request.auth.uid == userId;
      
      match /boardMemberships/{boardId} {
        allow read, write: if isSignedIn() && request.auth.uid == userId;
      }
    }
  }
}